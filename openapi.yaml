openapi: 3.1.0
servers:
  - url: http://localhost
info:
  title: Prompting API
  summary: The API for communication between snapd and prompt UI clients
  version: 0.0.1
  description: >
    The API for communication between snapd and prompt UI clients.
components:
  schemas:
    follow:
      description: >
        Whether or not to open a long-lived connection.
      type: boolean
    request-id:
      description: >
        The unique ID of a prompt request.
      type: string
    rule-id:
      description: >
        The unique ID of an access rule.
      type: string
    timestamp:
      description: >
        The timestamp at which an access rule was created or last modified.
      type: string
      format: date-time
    snap:
      description: >
        The name of the snap which corresponds to the prompt request or access
        rule.
      type: string
    app:
      description: >
        The name of the app which corresponds to the prompt request or access
        rule.
      type: string
    path:
      description: >
        The path of the object of the prompt request.
      type: string
    path-pattern:
      description: >
        The path glob for which the prompt request reply or access rule
        applies.
      type: string
    permission:
      description: >
        The operation for which a prompt request or access rule applies.
      type: string
      enum:
        - execute                # AA_MAY_EXEC, process may execute another program
        - write                  # AA_MAY_WRITE, process may write to a file or socket
        - read                   # AA_MAY_READ, process may read from a file or socket, or enumerate directory contents
        - append                 # AA_MAY_APPEND, process may open a file in append mode
        - create                 # AA_MAY_CREATE, process may create a new file
        - delete                 # AA_MAY_DELETE, process may delete a file, directory, symbolic link, or socket
        - open                   # AA_MAY_OPEN, process may open a file or directory, the additional presence of write or read grants specific type of access
        - rename                 # AA_MAY_RENAME, process may rename a file
        - set-attribute          # AA_MAY_SETATTR, not checked by the kernel
        - get-attribute          # AA_MAY_GETATTR, not checked by the kernel
        - set-credential         # AA_MAY_SETCRED, not used in the kernel
        - get-credential         # AA_MAY_GETCRED, not used in the kernel
        - change-mode            # AA_MAY_CHMOD, process may change UNIX file permissions
        - change-owner           # AA_MAY_CHOWN, process may change file ownership
        - change-group           # AA_MAY_CHGRP, process may change the group ownership of a file
        - lock                   # AA_MAY_LOCK, process may perform fcntl locking operations on file
        - execute-map            # AA_EXEC_MMAP, process may execute code from a page memory-mapped from a file
        - link                   # AA_MAY_LINK, process may create hard link
        - change-profile-on-exec # AA_MAY_ONEXEC, process may change the apparmor profile on the next exec call
        - change-profile         # AA_MAY_CHANGE_PROFILE, process may change the apparmor profile on demand
    action:
      description: >
        Whether to permit or deny access to the resource specified in the
        prompt request or access rule.
      type: string
      enum:
        - permit
        - deny
    lifespan:
      description: >
        The lifespan for which the access rule should be valid.
      type: string
      enum:
        - single
        - session
        - always
        - timeframe # TODO: how to store the timeframe?
    permissions:
      description: >
        The list of permissions for which a prompt request or access rule
        applies.
      type: array
      items:
        $ref: "#/components/schemas/permission"
    request:
      description: >
        A prompt request for the given snap and app to access the given path
        with the given permissions.
      type: object
      required:
        - snap
        - app
        - path
        - permissions
      properties:
        snap:
          $ref: "#/components/schemas/snap"
        app:
          $ref: "#/components/schemas/app"
        path:
          $ref: "#/components/schemas/path"
        permissions:
          $ref: "#/components/schemas/permissions"
    reply:
      description: >
        A reply to a prompt request.
      type: object
      required:
        - action
        - lifespan
        - path-pattern
        - permissions
      properties:
        action:
          $ref: "#/components/schemas/action"
        lifespan:
          $ref: "#/components/schemas/lifespan"
        path-pattern:
          $ref: "#/components/schemas/path-pattern"
        permissions:
          $ref: "#/components/schemas/permissions"
    rule-metadata:
      description: >
        The metadata for an access rule, including the timestamp at which that
        rule was created or modified.
      type: object
      required:
        - timestamp
      properties:
        timestamp:
          $ref: "#/components/schemas/timestamp"
    rule-contents:
      description: >
        The body of an access rule.
      type: object
      required:
        - snap
        - app
        - path-pattern
        - action
        - lifespan
        - permissions
      properties:
        snap:
          $ref: "#/components/schemas/snap"
        app:
          $ref: "#/components/schemas/app"
        path-pattern:
          $ref: "#/components/schemas/path-pattern"
        action:
          $ref: "#/components/schemas/action"
        lifespan:
          $ref: "#/components/schemas/lifespan"
        permissions:
          $ref: "#/components/schemas/permissions"
    rule:
      description: >
        A saved access rule.
      allOf:
        - $ref: "#/components/schemas/rule-metadata"
        - $ref: "#/components/schemas/rule-contents"
  parameters:
    request-id-param:
      description: >
        The ID of the prompt request.
      name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/request-id"
    rule-id-param:
      description: >
        The ID of the access rule.
      name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/rule-id"
tags:
  - name: requests
    description: Methods related to outstanding prompt requests.
  - name: rules
    description: Methods related to stored access rules.
paths:
  /v2/prompting/requests:
    GET:
      operationId: getRequests
      summary: Retrieve all prompt requests
      description: >
        Retrieve all outstanding prompt requests.
      tags:
        - requests
      parameters:
        - name: follow
          in: query
          description: >
            Open a long-lived connection using "json-seq" to be notified of
            any future prompt requests.
          required: false
          schema:
            $ref: "#/components/schemas/follow"
      responses:
        "200":
          description: >
            Successfully retrieved all outstanding prompt requests.
          content:
            application/json:
              schema:
                description: >
                  The prompt requests which are currently pending.
                type: object
                patternProperties:
                  "^.*$": # prompt request id pattern
                    $ref: "#/components/schemas/request"
        "404":
          description: >
            Failed to retrieve prompt requests.
  /v2/prompting/requests/{id}:
    GET:
      operationId: getRequestWithId
      summary: Retrieve the information for a particular prompt request
      description: >
        Retrieve the prompt request information corresponding to the given ID.
      tags:
        - requests
      parameters:
        - $ref: "#/components/parameters/request-id-param"
      responses:
        "200":
          description: >
            Successfully retrieved the request information for the prompt
            request with the given ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/request"
        "404":
          description: >
            No prompt request found with the given ID.
    POST:
      operationId: replyToRequestWithId
      summary: Reply to the given prompt request
      description: >
        Respond to the given prompt request, providing information collected
        by prompting the user for a decision about access to the object of
        the request.
      tags:
        - requests
      parameters:
        - $ref: "#/components/parameters/request-id-param"
      requestBody:
        description: >
          The contents of the reply to the prompt request.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reply"
      responses:
        "200":
          description: >
            Successfully received the reply for the prompt request with the
            given ID and created a corresponding access rule.
        "404":
          description: >
            No request found with the given ID, ignoring reply.
  /v2/access-control/rules:
    GET:
      operationId: getRules
      summary: Get existing access rules
      description: >
        Retrieve existing access rules from the rule database.

        If the snap parameter is given, only retrieve rules for that snap.

        If the app parameter is given along with the snap parameter, only
        retrieve rules for that app within the given snap.

        The follow and the app parameters are both ignored if the snap
        parameter is not given.
      tags:
        - rules
      parameters:
        - name: snap
          in: query
          description: >
            The snap for which to retrieve access rules.
          required: false
          schema:
            $ref: "#/components/schemas/snap"
        - name: app
          in: query
          description: >
            The app within the given snap for which to retrieve access rules.

            Returns an error if the `app` parameter is given without the `snap`
            parameter also being given.
          required: false
          schema:
            $ref: "#/components/schemas/app"
        - name: follow
          in: query
          description: >
            Open a long-lived connection using "json-seq" to be notified of
            future changes to stored rules.

            Returns an error if the `follow` parameter is given without `snap`
            parameter also being given.
          required: false
          schema:
            $ref: "#/components/schemas/follow"
      responses:
        "200":
          description: >
            Successfully retrieved existing access rules from the rule
            database.
          content:
            application/json:
              schema:
                description: >
                  The existing access rules.
                type: object
                patternProperties:
                  "^.*$": # access rule id pattern
                    $ref: "#/components/schemas/rule"
        "400":
          description: >
            The `snap` parameter is required when using the `app` or `follow`
            parameters.
        "404":
          description: >
            Failed to retrieve existing access rules from the rule database.
    POST:
      operationId: addDeleteRules
      summary: Create or delete access rules
      description: >
        Directly create new access rules without having previously been
        prompted with a prompt request, or delete previously-stored access
        rules from the database.
      tags:
        - rules
      requestBody:
        description: >
          The action to take (`create` or `delete`), and the corresponding
          information corresponding to that action.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
              properties:
                action:
                  description: >
                    Whether to create or delete access rules.
                  type: string
                  enum:
                    - create
                    - delete
                create-rules:
                  description: >
                    The contents of the access rules to add to the database.
                  type: array
                  items:
                    $ref: "#/components/schemas/rule-contents"
                delete-rules:
                  description: >
                    The list of snaps (and optionally apps) for which to delete
                    access rules.
                  type: array
                  items:
                    description: >
                      The snap (and optionally app) for which to delete access
                      rules.

                      If the `app` parameter is given, only delete rules for
                      that app within the given snap.
                    type: object
                    required:
                      - snap
                    properties:
                      snap:
                        $ref: "#/components/schemas/snap"
                      app:
                        $ref: "#/components/schemas/app"
      responses:
        "200":
          description: >
            Successfully added or deleted the given access rule.
          content:
            application/json:
              schema:
                description: >
                  The access rules which were created or deleted.
                type: object
                patternProperties:
                  "^.*$": # access rule id pattern
                    $ref: "#/components/schemas/rule"
        "404":
          description: >
            Failed to create or delete the given access rules.
  /v2/access-control/rules/{id}:
    GET:
      operationId: getRuleWithId
      summary: Get a particular access rule
      description: >
        Get the access rule corresponding to the given rule ID.
      tags:
        - rules
      parameters:
        - $ref: "#/components/parameters/rule-id-param"
      responses:
        "200":
          description: >
            Successfully retrieved the access rule with the given ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rule"
        "404":
          description: >
            No access rule found with the given ID.
    POST:
      operationId: modifyDeleteRuleWithId
      summary: Modify or delete an existing access rule
      description: >
        Modify or delete the access rule with the given request ID.
      tags:
        - rules
      parameters:
        - $ref: "#/components/parameters/rule-id-param"
      requestBody:
        description: >
          The updated contents of the reply for the access rule with the given
          ID.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
              properties:
                action:
                  description: >
                    Whether to modify or delete the access rule.
                  type: string
                  enum:
                    - modify
                    - delete
                modified-rule:
                  $ref: "#/components/schemas/reply"
      responses:
        "200":
          description: >
            Successfully modified or deleted the access rule with the given ID.

            If the rule was deleted, it can be found in the response content.
          content:
            applications/json:
              schema:
                $ref: "#/components/schemas/rule"
        "404":
          description: >
            No access rule found with the given ID.
            Ignored the given request body information.

