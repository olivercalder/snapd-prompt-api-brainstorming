openapi: 3.1.0
servers:
  - url: http://localhost
info:
  title: Prompting API
  summary: The API for communication between snapd and prompt UI clients
  version: 0.0.1
  description: >
    The API for communication between snapd and prompt UI clients.
components:
  schemas:
    follow:
      description: >
        Whether or not to open a long-lived connection.
      type: boolean
    prompt-id:
      description: >
        The unique ID of a prompt request.
      type: string
    decision-id:
      description: >
        The unique ID of an access decision.
      type: string
    timestamp:
      description: >
        The timestamp at which a decision was created or last modified.
      type: string
      format: date-time
    snap:
      description: >
        The name of the snap which corresponds to the prompt request or access
        decision.
      type: string
    app:
      description: >
        The name of the app which corresponds to the prompt request or access
        decision.
      type: string
    path:
      description: >
        The path of the object of the prompt request or access decision.
      type: string
    resource-type:
      description: >
        The device type or path type of the object of the prompt request or
        access decision.
        For example, a file, directory, or camera.
      type: string
      enum:
        - file
        - directory
        - camera
        - microphone
        # TODO: add remaining resource types
    permission:
      description: >
        The operation for which a prompt request or access decision applies.
      type: string
      enum:
        - execute                # AA_MAY_EXEC, process may execute another program
        - write                  # AA_MAY_WRITE, process may write to a file or socket
        - read                   # AA_MAY_READ, process may read from a file or socket, or enumerate directory contents
        - append                 # AA_MAY_APPEND, process may open a file in append mode
        - create                 # AA_MAY_CREATE, process may create a new file
        - delete                 # AA_MAY_DELETE, process may delete a file, directory, symbolic link, or socket
        - open                   # AA_MAY_OPEN, process may open a file or directory, the additional presence of write or read grants specific type of access
        - rename                 # AA_MAY_RENAME, process may rename a file
        - set-attribute          # AA_MAY_SETATTR, not checked by the kernel
        - get-attribute          # AA_MAY_GETATTR, not checked by the kernel
        - set-credential         # AA_MAY_SETCRED, not used in the kernel
        - get-credential         # AA_MAY_GETCRED, not used in the kernel
        - change-mode            # AA_MAY_CHMOD, process may change UNIX file permissions
        - change-owner           # AA_MAY_CHOWN, process may change file ownership
        - change-group           # AA_MAY_CHGRP, process may change the group ownership of a file
        - lock                   # AA_MAY_LOCK, process may perform fcntl locking operations on file
        - execute-map            # AA_EXEC_MMAP, process may execute code from a page memory-mapped from a file
        - link                   # AA_MAY_LINK, process may create hard link
        - change-profile-on-exec # AA_MAY_ONEXEC, process may change the apparmor profile on the next exec call
        - change-profile         # AA_MAY_CHANGE_PROFILE, process may change the apparmor profile on demand
    allow:
      description: >
        Whether to allow or deny access.
      type: boolean
    lifetime:
      description: >
        The lifetime for which the access decision should be valid.
      type: string
      enum:
        - single
        - session
        - always
        - timeframe # TODO: how to store the timeframe?
    permissions:
      description: >
        The list of permissions for which a prompt request or access decision
        applies.
      type: array
      items:
        $ref: "#/components/schemas/permission"
    path-scope:
      description: >
        Apply the same decision on either the path itself, all other files in
        the directory of the requested path, or all other files in the path's
        directory and all subdirectories.

        The subdirectories value is a superset of the the directory value.

        If the requested path is a file, then directory access refers to
        accessing files in the parent directory of the path.

        If the requested path is a directory, then directory access refers to
        accessing files in that directory.
      type: string
      enum:
        - file
        - directory
        - subdirectories
    request:
      description: >
        An outstanding prompt request for the given snap and app to access
        the given path with the given permissions.
      type: object
      required:
        - prompt-id
        - snap
        - app
        - path
        - resource-type
        - permissions
      properties:
        prompt-id:
          $ref: "#/components/schemas/prompt-id"
        snap:
          $ref: "#/components/schemas/snap"
        app:
          $ref: "#/components/schemas/app"
        path:
          $ref: "#/components/schemas/path"
        resource-type:
          $ref: "#/components/schemas/resource-type"
        permissions:
          $ref: "#/components/schemas/permissions"
    reply:
      description: >
        A reply to a prompt request.
      type: object
      required:
        - allow
        - lifetime
      properties:
        allow:
          $ref: "#/components/schemas/allow"
        lifetime:
          $ref: "#/components/schemas/lifetime"
        permissions:
          $ref: "#/components/schemas/permissions"
        path-scope:
          $ref: "#/components/schemas/path-scope"
      # store-parent:
      #   description: >
      #     Store the parent of the requested path in the database,
      #     rather than the path itself.
      #   type: boolean
    decision-metadata:
      description: >
        The metadata for an access decision, including the unique decision ID
        and the timestamp at which that decision was created or modified.
      type: object
      required:
        - decision-id
        - timestamp
      properties:
        decision-id:
          $ref: "#/components/schemas/decision-id"
        timestamp:
          $ref: "#/components/schemas/timestamp"
    decision-contents:
      description: >
        The body of an access decision.
      type: object
      required:
        - snap
        - app
        - path
        - resource-type
        - allow
        - lifetime
        - permissions
        - path-scope
      properties:
        snap:
          $ref: "#/components/schemas/snap"
        app:
          $ref: "#/components/schemas/app"
        path:
          $ref: "#/components/schemas/path"
        resource-type:
          $ref: "#/components/schemas/resource-type"
        allow:
          $ref: "#/components/schemas/allow"
        lifetime:
          $ref: "#/components/schemas/lifetime"
        permissions:
          $ref: "#/components/schemas/permissions"
        path-scope:
          $ref: "#/components/schemas/path-scope"
    decision:
      description: >
        A saved access decision with a corresponding ID and timestamp.
      allOf:
        - $ref: "#/components/schemas/decision-metadata"
        - $ref: "#/components/schemas/decision-contents"
    changed-decisions:
      description: >
        The access decisions which have been created, modified, or deleted as
        the result of a change.
      type: object
      properties:
        new:
          description: >
            The access decisions which have been created.
          type: array
          items:
            $ref: "#/components/schemas/decision"
        modified:
          description: >
            The access decisions which have been modified.
          type: array
          items:
            $ref: "#/components/schemas/decision"
        deleted:
          description: >
            The access decisions which have been deleted.
          type: array
          items:
            $ref: "#/components/schemas/decision"
  parameters:
    prompt-id-param:
      description: >
        The ID of the prompt request.
      name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/prompt-id"
    decision-id-param:
      description: >
        The ID of the access decision.
      name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/decision-id"
tags:
  - name: requests
    description: Methods related to outstanding prompt requests.
  - name: decisions
    description: Methods related to stored access decisions.
paths:
  /v2/prompting/requests:
    GET:
      operationId: getRequests
      summary: Retrieve all prompt requests
      description: >
        Retrieve all outstanding prompt requests.
      tags:
        - requests
      parameters:
        - name: follow
          in: query
          description: >
            Open a long-lived connection using "json-seq" to be notified of
            any future prompt requests.
          required: false
          schema:
            $ref: "#/components/schemas/follow"
      responses:
        "200":
          description: >
            Successfully retrieved all outstanding prompt requests.
          content:
            application/json:
              schema:
                description: >
                  The prompt requests which are currently pending.
                type: array
                items:
                  $ref: "#/components/schemas/request"
        "404":
          description: >
            Failed to retrieve prompt requests.
  /v2/prompting/requests/{id}:
    GET:
      operationId: getRequestWithId
      summary: Retrieve the information for a particular prompt request
      description: >
        Retrieve the prompt request information corresponding to the given ID.
      tags:
        - requests
      parameters:
        - $ref: "#/components/parameters/prompt-id-param"
      responses:
        "200":
          description: >
            Successfully retrieved the request information for the prompt
            request with the given ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/request"
        "404":
          description: >
            No prompt request found with the given ID.
    POST:
      operationId: replyToRequestWithId
      summary: Reply to the given prompt request
      description: >
        Respond to the given prompt request, providing information collected
        by prompting the user for a decision about access to the object of
        the request.
      tags:
        - requests
      parameters:
        - $ref: "#/components/parameters/prompt-id-param"
      requestBody:
        description: >
          The contents of the reply to the prompt request.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reply"
      responses:
        "200":
          description: >
            Successfully received the reply for the prompt request with the
            given ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/changed-decisions"
        "404":
          description: >
            No request found with the given ID, ignoring reply.
  /v2/prompting/decisions:
    GET:
      operationId: getDecisions
      summary: Get existing access decisions
      description: >
        Retrieve existing access decisions from the decision database.

        If the snap parameter is given, only retrieve decisions for that snap.

        If the app parameter is given along with the snap parameter, only
        retrieve decisions for that app within the given snap.

        The follow and the app parameters are both ignored if the snap
        parameter is not given.
      tags:
        - decisions
      parameters:
        - name: snap
          in: query
          description: >
            The snap for which to retrieve access decisions.
          required: false
          schema:
            $ref: "#/components/schemas/snap"
        - name: app
          in: query
          description: >
            The app within the given snap for which to retrieve access
            decisions.

            Ignored if the snap parameter is not also given.
          required: false
          schema:
            $ref: "#/components/schemas/app"
        - name: follow
          in: query
          description: >
            Open a long-lived connection using "json-seq" to be notified of
            future changes to stored decisions.

            Ignored if the snap parameter is not also given.
          required: false
          schema:
            $ref: "#/components/schemas/follow"
      responses:
        "200":
          description: >
            Successfully retrieved existing access decisions from the decision
            database.
          content:
            application/json:
              schema:
                description: >
                  The existing access decisions.
                type: array
                items:
                  $ref: "#/components/schemas/decision"
        "404":
          description: >
            Failed to retrieve existing access decisions from the decision
            database.
    POST:
      operationId: addDecision
      summary: Create a new access decision
      description: >
        Directly create a new access decision without having previously been
        prompted with a prompt request.
      tags:
        - decisions
      requestBody:
        description: >
          The contents of the access decision to be added.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/decision-contents"
      responses:
        "200":
          description: >
            Successfully added the given access decision.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/changed-decisions"
        "404":
          description: >
            Failed to create the given access decision.
    DELETE:
      operationId: deleteDecisions
      summary: Delete existing access decisions
      description: >
        Delete previously-stored access decisions from the decision database.
        If the snap parameter is given, only delete decisions for that snap.
        If the app parameter is given along with the snap parameter, only
        delete decisions for that app within the given snap.
        The app parameter is ignored if the snap parameter is not given.
      tags:
        - decisions
      parameters:
        - name: snap
          in: query
          description: >
            The snap for which to delete access decisions.
          required: true
          schema:
            $ref: "#/components/schemas/snap"
        - name: app
          in: query
          description: >
            The app within the given snap for which to delete access decisions.

            Ignored if the snap parameter is not also given.
          required: false
          schema:
            $ref: "#/components/schemas/app"
      responses:
        "200":
          description: >
            Successfully deleted access decisions.
            All deleted decisions can be found in the response content.
          content:
            application/json:
              schema:
                description: >
                  The access decisions which were deleted.
                type: array
                items:
                  $ref: "#/components/schemas/decision"
        "404":
          description: >
            Failed to delete access decisions from the decision database.
  /v2/prompting/decisions/{id}:
    GET:
      operationId: getDecisionWithId
      summary: Get a particular access decision
      description: >
        Get the access decision corresponding to the given decision ID.
      tags:
        - decisions
      parameters:
        - $ref: "#/components/parameters/decision-id-param"
      responses:
        "200":
          description: >
            Successfully retrieved the access decision with the given ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/decision"
        "404":
          description: >
            No access decision found with the given ID.
    POST:
      operationId: modifyDecisionWithId
      summary: Modify an existing access decision
      description: >
        Modify the access decision corresponding to the given request ID.
      tags:
        - decisions
      parameters:
        - $ref: "#/components/parameters/decision-id-param"
      requestBody:
        description: >
          The updated contents of the reply for the given access decision.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reply"
      responses:
        "200":
          description: >
            Successfully modified the access decision with the given ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/changed-decisions"
        "404":
          description: >
            No access decision found with the given ID.
            Ignored the given reply information.
    DELETE:
      operationId: deleteDecisionWithId
      summary: Delete an access decision.
      description: >
        Delete the access decision with the given ID.
      tags:
        - decisions
      parameters:
        - $ref: "#/components/parameters/decision-id-param"
      responses:
        "200":
          description: >
            Successfully deleted the access decision with the given ID.
            It can be found in the response content.
          content:
            applications/json:
              schema:
                $ref: "#/components/schemas/decision"
        "404":
          description: >
            No access decision found with the given ID.
            Failed to delete decision.

